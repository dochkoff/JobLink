@model AllJobsQueryModel

@{
    ViewBag.Title = "Job Board";
    var maxPage = Math.Ceiling((double)Model.TotalJobsCount / Model.JobsPerPage);
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get" class="mb-4">
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="SearchTerm" class="form-label">Search Term</label>
                <input asp-for="SearchTerm" class="form-control">
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="JobCategory" class="form-label">Job Category</label>
                <select asp-for="JobCategory" class="form-select">
                    <option value="">All</option>
                    @foreach (var category in Model.JobCategories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>

        
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Sorting" class="form-label">Sorting</label>
                <select asp-for="Sorting" class="form-select">
                    <option value="0">Newest</option>
                    <option value="1">Salary</option>
                    <option value="2">With no applications</option>
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group mt-4">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

@if (!Model.Jobs.Any())
{
    <h2 class="text-center">No jobs found!</h2>
}

<div class="row">
    @foreach (var job in Model.Jobs)
    {
        <partial name="_JobPartial" model="@job" />
    }
</div>

<div class="row mt-4">
    <div class="col-md-12 d-flex justify-content-center">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Board", new { currentPage = Model.CurrentPage - 1, category = Model.JobCategory, searchTerm = Model.SearchTerm, sorting = Model.Sorting })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @for (var i = 1; i <= maxPage; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Board", new { currentPage = i, category = Model.JobCategory, searchTerm = Model.SearchTerm, sorting = Model.Sorting })">@i</a>
                    </li>
                }
                <li class="page-item @(Model.CurrentPage == maxPage ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Board", new { currentPage = Model.CurrentPage + 1, category = Model.JobCategory, searchTerm = Model.SearchTerm, sorting = Model.Sorting })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>
